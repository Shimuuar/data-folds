
Monadic laws:
 Left identity:    return a >>= f   ≡   f a
 Right identity:   m >>= return     ≡   m
 Associativity:   (m >>= f) >>= g   ≡   m >>= (\x -> f x >>= g)

----------------------------------------------------------------
Proof for left identity

1. (return a) >>= f
  -- Inline >>=
2. ListT $ \step x0 → unListT (return a) (\r b → unListT (f b) step r) x0
  -- Inline return
3. ListT $ \step x0 → (\step' x0' -> step' x0' a) (\r b → unListT (f b) step r) x0
  -- Substitute
4. ListT $ \step x0 → (\r b → unListT (f b) step r) x0 a
  -- Substitute
5. ListT $ \step x0 → unListT (f a) step x0
  -- Lemma 1
6. f a
  QED


----------------------------------------------------------------
-- Proof for right identity

1. m >>= return
  -- Inline >>=
2. ListT $ \step x0 → unListT m (\r a → unListT (return a) step r) x0
  -- Inline return
3. ListT $ \step x0 → unListT m (\r a → (\step' x0' → step' x0' a) step r) x0
  -- Substitute
4. ListT $ \step x0 → unListT m (\r a → step r a) x0
  -- Eta-reduce
5. ListT $ \step x0 → unListT m step x0
  -- Lemma 1
6. m
  QED


----------------------------------------------------------------
-- Proof for associativity

1. 


----------------------------------------------------------------
-- Lemma 1
--
-- Prove:
--   xs = ListT $ \step x0 → unListT xs step x0

1. ListT $ \step x0 → unListT xs step x0
  -- Eta-reduce
2. ListT (unListT xs)
  -- Cast
3. xs
  QED
